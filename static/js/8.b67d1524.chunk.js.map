{"version":3,"sources":["components/pages/SinglePage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["SinglePage","Component","dataType","id","useParams","useState","data","setData","useMarvelService","loading","error","getComic","getCharacter","clearError","useEffect","updateData","then","onDataLoaded","errorMessage","spinner","content","ErrorMessage","style","display","width","height","objectFit","margin","src","img","alt","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","message","useHttp","_apiBase","_apiKey","getCharacterByName","name","res","results","map","_transformCharacter","getAllCharacters","a","offset","getAllComics","_transformComics","char","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","AppBanner","className","avengers","avengersLogo"],"mappings":"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","file":"static/js/8.b67d1524.chunk.js","sourcesContent":["import { useParams } from 'react-router-dom'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport Spinner from '../spinner/Spinner'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\nimport AppBanner from '../appBanner/AppBanner'\r\n\r\nconst SinglePage = ({ Component, dataType }) => {\r\n\tconst { id } = useParams()\r\n\tconst [data, setData] = useState(null)\r\n\tconst { loading, error, getComic, getCharacter, clearError } = useMarvelService()\r\n\r\n\tuseEffect(() => {\r\n\t\tupdateData()\r\n\t}, [id])\r\n\r\n\tconst updateData = () => {\r\n\t\tclearError()\r\n\r\n\t\tswitch (dataType) {\r\n\t\t\tcase 'comic':\r\n\t\t\t\tgetComic(id).then(onDataLoaded)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'character':\r\n\t\t\t\tgetCharacter(id).then(onDataLoaded)\r\n\t\t}\r\n\t}\r\n\r\n\tconst onDataLoaded = (data) => {\r\n\t\tsetData(data)\r\n\t}\r\n\r\n\tconst errorMessage = error ? <ErrorMessage /> : null\r\n\tconst spinner = loading ? <Spinner /> : null\r\n\tconst content = !(loading || error || !data) ? <Component data={data} /> : null\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppBanner />\r\n\t\t\t{errorMessage}\r\n\t\t\t{spinner}\r\n\t\t\t{content}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default SinglePage","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt='Error' />\r\n}\r\n\r\nexport default ErrorMessage","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n\tconst _apiKey = 'apikey=197a219df3e76758567c5c06ac0d6580'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn { loading, error, clearError, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [error, setError] = useState(null)\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\t\tsetLoading(true)\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json()\r\n\r\n\t\t\tsetLoading(false)\r\n\t\t\treturn data\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetError(e.message)\r\n\t\t\tthrow e\r\n\t\t}\r\n    \r\n\t}, [])\r\n\r\n\tconst clearError = useCallback(() => setError(null), [])\r\n\r\n\treturn { loading, request, error, clearError }\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}