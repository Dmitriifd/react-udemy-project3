{"version":3,"sources":["resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js"],"names":["View","char","name","description","thumbnail","homepage","wiki","imgStyle","objectFit","className","src","alt","style","href","RandomChar","useState","setChar","useMarvelService","loading","error","getCharacter","clearError","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","errorMessage","ErrorMessage","spinner","Spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","items","arr","map","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","Skeleton","comics","CharInfo","charId","skeleton","CharSearchForm","getCharacterByName","results","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","ErrorBoundary","state","errorInfo","console","log","this","setState","children","Component","MainPage","selectedChar","Helmet","decoration","width","height","margin","img","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","useHttp","_apiBase","_apiKey","res","_transformCharacter","a","getAllComics","_transformComics","getComic","slice","path","extension","urls","title","pageCount","language","textObjects","price","prices"],"mappings":"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","file":"static/js/6.a9a948bd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport useMarvelService from '../../services/MarvelService'\n\nimport './randomChar.scss'\nimport mjolnir from '../../resources/img/mjolnir.png'\n\nconst RandomChar = () => {\n\tconst [char, setChar] = useState(null)\n\tconst { loading, error, getCharacter, clearError } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t\tconst timerId = setInterval(updateChar, 60000)\n\n\t\treturn () => {\n\t\t\tclearInterval(timerId)\n\t\t}\n\t}, [])\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char)\n\t}\n\n\tconst updateChar = () => {\n\t\tclearError()\n\t\tconst id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000\n\t\tgetCharacter(id).then(onCharLoaded)\n\t}\n\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading ? <Spinner /> : null\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null\n\n\treturn (\n\t\t<div className='randomchar'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t\t<div className='randomchar__static'>\n\t\t\t\t<p className='randomchar__title'>\n\t\t\t\t\tRandom character for today!\n\t\t\t\t\t<br />\n\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t</p>\n\t\t\t\t<p className='randomchar__title'>Or choose another one</p>\n\t\t\t\t<button onClick={updateChar} className='button button__main'>\n\t\t\t\t\t<div className='inner'>try it</div>\n\t\t\t\t</button>\n\t\t\t\t<img src={mjolnir} alt='mjolnir' className='randomchar__decoration' />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki } = char\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\n\treturn (\n\t\t<div className='randomchar__block'>\n\t\t\t<img src={thumbnail} alt='Random character' className='randomchar__img' style={imgStyle} />\n\t\t\t<div className='randomchar__info'>\n\t\t\t\t<p className='randomchar__name'>{name}</p>\n\t\t\t\t<p className='randomchar__descr'>{description}</p>\n\t\t\t\t<div className='randomchar__btns'>\n\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar","import { useState, useEffect, useRef } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport useMarvelService from '../../services/MarvelService'\nimport './charList.scss'\n\nconst CharList = (props) => {\n\tconst [charList, setCharList] = useState([])\n\tconst [newItemLoading, setNewItemLoading] = useState(false)\n\tconst [offset, setOffset] = useState(210)\n\tconst [charEnded, setCharEnded] = useState(false)\n\n\tconst { loading, error, getAllCharacters } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true)\n\t\tgetAllCharacters(offset).then(onCharListLoaded)\n\t}\n\n\tconst onCharListLoaded = (newCharList) => {\n\t\tlet ended = false\n\t\tif (newCharList.length < 9) {\n\t\t\tended = true\n\t\t}\n\n\t\tsetCharList((charList) => [...charList, ...newCharList])\n\t\tsetNewItemLoading((newItemLoading) => false)\n\t\tsetOffset((offset) => offset + 9)\n\t\tsetCharEnded((charEnded) => ended)\n\t}\n\n\tconst itemRefs = useRef([])\n\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach((item) => item.classList.remove('char__item_selected'))\n\t\titemRefs.current[id].classList.add('char__item_selected')\n\t\titemRefs.current[id].focus()\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = { objectFit: 'cover' }\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timgStyle = { objectFit: 'unset' }\n\t\t\t}\n\n\t\t\treturn (\n\t\t\t\t<li\n\t\t\t\t\tclassName='char__item'\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={(el) => (itemRefs.current[i] = el)}\n\t\t\t\t\tkey={item.id}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\tif (e.key === ' ' || e.key === 'Enter') {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id)\n\t\t\t\t\t\t\tfocusOnItem(i)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle} />\n\t\t\t\t\t<div className='char__name'>{item.name}</div>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn <ul className='char__grid'>{items}</ul>\n\t}\n\n\tconst items = renderItems(charList)\n\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null\n\n\treturn (\n\t\t<div className='char__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: charEnded ? 'none' : 'block' }}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nCharList.propTypes = {\n\tonCharSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton'\n\nimport './charInfo.scss'\n\nconst CharInfo = (props) => {\n\tconst [char, setChar] = useState(null)\n\n\tconst { loading, error, getCharacter, clearError } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tupdateChar()\n\t}, [props.charId])\n\n\tconst updateChar = () => {\n\t\tconst { charId } = props\n\t\tif (!charId) {\n\t\t\treturn\n\t\t}\n\n\t\tclearError()\n\t\tgetCharacter(charId).then(onCharLoaded)\n\t}\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char)\n\t}\n\n\tconst skeleton = char || loading || error ? null : <Skeleton />\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading ? <Spinner /> : null\n\tconst content = !(loading || error || !char) ? <View char={char} /> : null\n\n\treturn (\n\t\t<div className='char__info'>\n\t\t\t{skeleton}\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</div>\n\t)\n}\n\nconst View = ({ char }) => {\n\tconst { name, description, thumbnail, homepage, wiki, comics } = char\n\n\tlet imgStyle = { objectFit: 'cover' }\n\tif (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\timgStyle = { objectFit: 'contain' }\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div className='char__basics'>\n\t\t\t\t<img src={thumbnail} alt={name} style={imgStyle} />\n\t\t\t\t<div>\n\t\t\t\t\t<div className='char__info-name'>{name}</div>\n\t\t\t\t\t<div className='char__btns'>\n\t\t\t\t\t\t<a href={homepage} className='button button__main'>\n\t\t\t\t\t\t\t<div className='inner'>homepage</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a href={wiki} className='button button__secondary'>\n\t\t\t\t\t\t\t<div className='inner'>Wiki</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='char__descr'>{description}</div>\n\t\t\t<div className='char__comics'>Comics:</div>\n\t\t\t<ul className='char__comics-list'>\n\t\t\t\t{comics.length > 0 ? null : 'There is no comics with this character'}\n\t\t\t\t{comics.map((item, i) => {\n\t\t\t\t\tif (i > 9) return\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<li key={i} className='char__comics-item'>\n\t\t\t\t\t\t\t{item.name}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nCharInfo.propTypes = {\n\tcharId: PropTypes.number,\n}\n\nexport default CharInfo","import { useState } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport useMarvelService from '../../services/MarvelService'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\n\r\nimport './charSearchForm.scss'\r\n\r\nconst CharSearchForm = () => {\r\n\tconst [char, setChar] = useState(null)\r\n\tconst { loading, error, getCharacterByName, clearError } = useMarvelService()\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char)\r\n\t}\r\n\r\n\tconst updateChar = (name) => {\r\n\t\tclearError()\r\n\r\n\t\tgetCharacterByName(name).then(onCharLoaded)\r\n\t}\r\n\r\n\tconst errorMessage = error ? (\r\n\t\t<div className='char__search-critical-error'>\r\n\t\t\t<ErrorMessage />\r\n\t\t</div>\r\n\t) : null\r\n\tconst results = !char ? null : char.length > 0 ? (\r\n\t\t<div className='char__search-wrapper'>\r\n\t\t\t<div className='char__search-success'>There is! Visit {char[0].name} page?</div>\r\n\t\t\t<Link to={`/characters/${char[0].id}`} className='button button__secondary'>\r\n\t\t\t\t<div className='inner'>To page</div>\r\n\t\t\t</Link>\r\n\t\t</div>\r\n\t) : (\r\n\t\t<div className='char__search-error'>The character was not found. Check the name and try again</div>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className='char__search-form'>\r\n\t\t\t<Formik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tcharName: '',\r\n\t\t\t\t}}\r\n\t\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\t\tcharName: Yup.string().required('This field is required'),\r\n\t\t\t\t})}\r\n\t\t\t\tonSubmit={({ charName }) => {\r\n\t\t\t\t\tupdateChar(charName)\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className='char__search-label' htmlFor='charName'>\r\n\t\t\t\t\t\tOr find a character by name:\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<div className='char__search-wrapper'>\r\n\t\t\t\t\t\t<Field id='charName' name='charName' type='text' placeholder='Enter name' />\r\n\t\t\t\t\t\t<button type='submit' className='button button__main' disabled={loading}>\r\n\t\t\t\t\t\t\t<div className='inner'>find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component='div' className='char__search-error' name='charName' />\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{results}\r\n\t\t\t{errorMessage}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default CharSearchForm\r\n","import { Component } from 'react'\r\nimport ErrorMessage from '../errorMessage/ErrorMessage'\r\n\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false,\r\n\t}\r\n\r\n\tcomponentDidCatch(error, errorInfo) {\r\n\t\tconsole.log(error, errorInfo)\r\n\t\tthis.setState({\r\n\t\t\terror: true,\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.error) {\r\n\t\t\treturn <ErrorMessage />\r\n\t\t}\r\n\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nimport RandomChar from '../randomChar/RandomChar'\r\nimport CharList from '../charList/CharList'\r\nimport CharInfo from '../charInfo/CharInfo'\r\nimport CharSearchForm from '../charSearchForm/CharSearchForm'\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\r\n\r\nimport decoration from '../../resources/img/vision.png'\r\n\r\nconst MainPage = () => {\r\n\tconst [selectedChar, setChar] = useState(null)\r\n\r\n\tconst onCharSelected = (id) => {\r\n\t\tsetChar(id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name='description' content='Marvel information portal' />\r\n\t\t\t\t<title>Marvel information portal</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar />\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className='char__content'>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharList onCharSelected={onCharSelected} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharInfo charId={selectedChar} />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t<CharSearchForm />\r\n\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className='bg-decoration' src={decoration} alt='vision' />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default MainPage","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt='Error' />\r\n}\r\n\r\nexport default ErrorMessage","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n\tconst _apiKey = 'apikey=197a219df3e76758567c5c06ac0d6580'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn { loading, error, clearError, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [error, setError] = useState(null)\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\t\tsetLoading(true)\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json()\r\n\r\n\t\t\tsetLoading(false)\r\n\t\t\treturn data\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetError(e.message)\r\n\t\t\tthrow e\r\n\t\t}\r\n    \r\n\t}, [])\r\n\r\n\tconst clearError = useCallback(() => setError(null), [])\r\n\r\n\treturn { loading, request, error, clearError }\r\n}"],"sourceRoot":""}