{"version":3,"sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js"],"names":["ComicsList","useState","comicsList","setComicsList","newItemLoading","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","loading","error","getAllComics","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","items","arr","map","item","i","className","to","id","src","thumbnail","alt","title","price","renderItems","errorMessage","ErrorMessage","spinner","Spinner","disabled","style","display","onClick","ComicsPage","Helmet","name","content","AppBanner","width","height","objectFit","margin","img","setLoading","setError","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","_apiBase","_apiKey","getCharacterByName","res","results","_transformCharacter","getAllCharacters","a","getCharacter","_transformComics","getComic","char","description","slice","path","extension","homepage","urls","wiki","comics","pageCount","language","textObjects","prices","avengers","avengersLogo"],"mappings":"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","file":"static/js/7.385e0e2d.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nimport './comicsList.scss'\n\nconst ComicsList = () => {\n\tconst [comicsList, setComicsList] = useState([])\n\tconst [newItemLoading, setnewItemLoading] = useState(false)\n\tconst [offset, setOffset] = useState(0)\n\tconst [comicsEnded, setComicsEnded] = useState(false)\n\n\tconst { loading, error, getAllComics } = useMarvelService()\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true)\n\t}, [])\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setnewItemLoading(false) : setnewItemLoading(true)\n\t\tgetAllComics(offset).then(onComicsListLoaded)\n\t}\n\n\tconst onComicsListLoaded = (newComicsList) => {\n\t\tlet ended = false\n\t\tif (newComicsList.length < 8) {\n\t\t\tended = true\n\t\t}\n\t\tsetComicsList([...comicsList, ...newComicsList])\n\t\tsetnewItemLoading(false)\n\t\tsetOffset(offset + 8)\n\t\tsetComicsEnded(ended)\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\treturn (\n\t\t\t\t<li className='comics__item' key={i}>\n\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.title} className='comics__item-img' />\n\t\t\t\t\t\t<div className='comics__item-name'>{item.title}</div>\n\t\t\t\t\t\t<div className='comics__item-price'>{item.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t)\n\t\t})\n\n\t\treturn <ul className='comics__grid'>{items}</ul>\n\t}\n\n\tconst items = renderItems(comicsList)\n\n\tconst errorMessage = error ? <ErrorMessage /> : null\n\tconst spinner = loading && !newItemLoading ? <Spinner /> : null\n\n\treturn (\n\t\t<div className='comics__list'>\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{items}\n\t\t\t<button\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{ display: comicsEnded ? 'none' : 'block' }}\n\t\t\t\tclassName='button button__main button__long'\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t>\n\t\t\t\t<div className='inner'>load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ComicsList","import { Helmet } from 'react-helmet'\r\n\r\nimport ComicsList from '../comicsList/ComicsList'\r\nimport AppBanner from '../appBanner/AppBanner'\r\n\r\nconst ComicsPage = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta name='description' content='Page with list of our comics' />\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<AppBanner />\r\n\t\t\t<ComicsList />\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default ComicsPage","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\n\r\nconst ErrorMessage = () => {\r\n\treturn <img style={{ display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto' }} src={img} alt='Error' />\r\n}\r\n\r\nexport default ErrorMessage","import { useHttp } from '../hooks/http.hook'\r\n\r\nconst useMarvelService = () => {\r\n\tconst { loading, request, error, clearError } = useHttp()\r\n\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n\tconst _apiKey = 'apikey=197a219df3e76758567c5c06ac0d6580'\r\n\tconst _baseOffset = 210\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformCharacter)\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`)\r\n\t\treturn _transformCharacter(res.data.results[0])\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`)\r\n\t\treturn res.data.results.map(_transformComics)\r\n\t}\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`)\r\n\t\treturn _transformComics(res.data.results[0])\r\n\t}\r\n\r\n\tconst _transformCharacter = (char) => {\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description\r\n\t\t\t\t? `${char.description.slice(0, 210)}...`\r\n\t\t\t\t: 'There is no description for this character',\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items,\r\n\t\t}\r\n\t}\r\n\r\n\tconst _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || 'There is no description',\r\n\t\t\tpageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\r\n\t\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\r\n\t\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available',\r\n\t\t}\r\n\t}\r\n\r\n\treturn { loading, error, clearError, getAllCharacters, getCharacterByName, getCharacter, getAllComics, getComic }\r\n}\r\n\r\nexport default useMarvelService\r\n","import { useState, useCallback } from 'react'\r\n\r\nexport const useHttp = () => {\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [error, setError] = useState(null)\r\n\r\n\tconst request = useCallback(async (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\r\n\t\tsetLoading(true)\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(url, { method, body, headers })\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json()\r\n\r\n\t\t\tsetLoading(false)\r\n\t\t\treturn data\r\n\t\t} catch (e) {\r\n\t\t\tsetLoading(false)\r\n\t\t\tsetError(e.message)\r\n\t\t\tthrow e\r\n\t\t}\r\n    \r\n\t}, [])\r\n\r\n\tconst clearError = useCallback(() => setError(null), [])\r\n\r\n\treturn { loading, request, error, clearError }\r\n}","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;"],"sourceRoot":""}